<?php

require_once 'admin/lib/Admin/Config.php';

/**
 * Test class for Config.
 * Generated by PHPUnit on 2011-10-03 at 11:54:23.
 */
class ConfigTest extends PHPUnit_Framework_TestCase {
	/**
	 * @var \Admin\Config
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$data = array(
			'value0',
			'string' => 'value',
			'number' => 1,
			'array_key' => array(
				'0' => 'a',
				'c' => 'c',
			),
			null
		);
		$this->object = new \Admin\Config($data);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	public function test__get() {
		// Get string value
		$value = $this->object->string;
		$this->assertEquals('value', $value);

		// Get integer value
		$number = $this->object->number;
		$this->assertEquals(1, $number);

		// Get array value
		$array = $this->object->array_key;
		$this->assertInstanceOf('\Admin\Config', $array);
		$this->assertEquals('c', $array->c);
	}

	public function test__set() {
		$this->object->newkey = 'bar';
		$this->assertEquals('bar', $this->object->offsetGet('newkey'));
		
		$array = array(
			'foo' => 'bar'
		);
		$this->object->newkey = $array;
		$result = $this->object->offsetGet('newkey');
		$this->assertInstanceOf('\Admin\Config', $result);
		$this->assertEquals('bar', $result->offsetGet('foo'));
	}

	/**
	 * @expectedException OutOfBoundsException
	 * @return void
	 */
	public function test__getException() {
		$this->object->nokey;
	}

	public function testGetIterator() {
		$iterator = $this->object->getIterator();
		$this->assertInstanceOf('Iterator', $iterator);
	}

	public function testOffsetExists() {
		// Integer key
		$this->assertTrue($this->object->offsetExists(0));

		// String key
		$this->assertTrue($this->object->offsetExists('string'));

		// Not exists key
		$this->assertFalse($this->object->offsetExists('nokey'));
		
		// NULL value
		$this->assertTrue($this->object->offsetExists(1));
	}

	public function testOffsetGet() {
		// Integer key
		$value = $this->object[0];
		$this->assertEquals('value0', $value);

		// String key
		$string = $this->object['string'];
		$this->assertEquals('value', $string);

		// Array value
		$array = $this->object['array_key'];
		$this->assertInstanceOf('\Admin\Config', $array);
		$this->assertEquals('c', $array['c']);
		$this->assertEquals('a', $array[0]);
	}

	public function testOffsetSet() {
		// Test integer offset
		$this->object[1] = 'one';
		$this->assertEquals('one', $this->object[1]);
		$this->assertEquals('value', $this->object['string']);

		// Test string offset
		$str = 'another value';
		$this->object['string'] = $str;
		$this->assertEquals($str, $this->object['string']);

		// Test array value
		$array = array(
			'key' => 'value'
		);
		$this->object['test_array'] = $array;
		$result = $this->object['test_array'];
		$this->assertInstanceOf('\Admin\Config', $result);
		$this->assertEquals('value', $result['key']);
	}

	public function testOffsetUnset() {
		$this->object->offsetUnset('string');
		$this->assertFalse($this->object->offsetExists('string'));
	}
	
	/**
	 * @expectedException \OutOfBoundsException
	 */
	public function testConfig() {
		$config = $this->object->array_key;
		$config['config'];
	}
}

?>
