<?php
namespace Admin;


require_once 'admin/lib/Admin/ClassLoader.php';

/**
 * Test class for JBFWClassLoader.
 * Generated by PHPUnit on 2011-12-21 at 13:44:51.
 */
class ClassLoaderTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var ClassLoader
	 */
	protected $object;
	
	protected $rootPath;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new ClassLoader();
		$this->rootPath = stream_resolve_include_path('admin');
	}
	
	public function testResolveFileEmpty() {
		$file = $this->object->resolveFile('\Admin\Config');
		$this->assertFalse($file);
	}
	
	public function testNoFile() {
		$this->object->registerNamespace('\Admin', $this->rootPath . '/lib');
		$file = $this->object->resolveFile('\Admin\ThereIsNoSuchClass');
		$this->assertFalse($file);
	}
	
	public function testResolveFile() {
		$this->object->registerNamespace('\Admin', $this->rootPath . '/lib');
		
		$file = $this->object->resolveFile('\Admin\Config');
		
		$this->assertEquals($this->rootPath . '/lib/Admin/Config.php', $file);
	}
	
	public function testMultipleDirectories() {
		$this->object->registerNamespace('\Admin', array('/lib', $this->rootPath . '/lib', $this->rootPath));
				
		$file = $this->object->resolveFile('\Admin\Config');
		
		$this->assertEquals($this->rootPath . '/lib/Admin/Config.php', $file);
	}
	
	public function testNamespaceFallback() {
		$this->object->registerNamespace('\Fake', $this->rootPath . '/fake');
		$this->object->registerNamespace('\Admin', __DIR__);
		$this->object->registerNamespace('\Admin', $this->rootPath . '/lib');
				
		$file = $this->object->resolveFile('\Admin\Extension\Session\SessionExtension');
		
		$this->assertEquals($this->rootPath . '/lib/Admin/Extension/Session/SessionExtension.php', $file);
	}
	
	public function testWithoutNamespace() {
		$this->object->registerNamespace('\\', $this->rootPath . '/tests');
		
		$file = $this->object->resolveFile('TestClass');
				
		$this->assertEquals($this->rootPath . '/tests/TestClass.php', $file);
	}

	public function testRegister() {
		$before = count(spl_autoload_functions());
		$this->object->register();
		$after = count(spl_autoload_functions());
		
		$this->assertEquals(1, $after - $before);
	}
	
	public function testLoadClass() {
		$this->object->registerNamespace('\\', $this->rootPath . '/tests');
		$this->object->register();
		
		$test = new \TestClass();
	}
}

?>
