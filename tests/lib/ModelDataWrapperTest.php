<?php
/**
 * Generated by PHPUnit_SkeletonGenerator on 2012-03-20 at 01:02:33.
 */

require_once 'lib/ModelDataWrapper.php';

class TestModelData extends ModelData {
	public function testFunc($idx, $param) {
		return $idx + $param;
	}
}

class ModelDataWrapperTest extends PHPUnit_Framework_TestCase {
	/**
	 * @var ModelDataWrapper
	 */
	protected $object;

	/**
	 * @var ModelData
	 */
	protected $model;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->model = new TestModelData('testtable');
		$this->model->field(new CharField('first_field'));
		$this->model->field(new CharField('second_field'));

		$this->model->data = array(
			array('id' => 12, 'first_field' => "test string one", 'second_field' => 'some string one'),
			array('id' => 34, 'first_field' => "test string two", 'second_field' => 'some string two'),
			array('id' => 76, 'first_field' => "test string three", 'second_field' => 'some string three'),
		);

		$this->object = new ModelDataWrapper($this->model, 1);
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
	}

	/**
	 * @covers ModelDataWrapper::__get
	 */
	public function test__get() {
		$this->assertEquals(34, $this->object->id);
		$this->assertEquals("test string two", $this->object->first_field);
		$this->assertEquals('some string two', $this->object->second_field);
	}

	/**
	 * @covers ModelDataWrapper::__set
	 */
	public function test__set() {
		$this->assertEquals(34, $this->object->id);
		$this->object->id = 55;
		$this->assertEquals(55, $this->object->id);
	}

	/**
	 * @covers ModelDataWrapper::__isset
	 */
	public function test__isset() {
		$this->assertTrue(isset($this->object->first_field));
		$this->assertTrue(isset($this->object->second_field));
		$this->assertFalse(isset($this->object->third_field));
		unset($this->model->second_field);
		$this->assertFalse(isset($this->object->second_field));
	}

	/**
	 * @covers ModelDataWrapper::__unset
	 */
	public function test__unset() {
		$this->assertTrue(isset($this->model->data[1]['second_field']));
		unset($this->object->second_field);
		$this->assertFalse(isset($this->model->data[1]['second_field']));
	}

	/**
	 * @covers ModelDataWrapper::__call
	 */
	public function test__call() {
		$this->assertEquals(3, $this->object->testFunc(2));
		$this->assertEquals(7, $this->object->testFunc(6));
	}

	/**
	 * @expectedException ModelException
	 * @covers ModelDataWrapper::__call
	 */
	public function test__callInvalid() {
		$this->object->someFunc(123);
	}
}
